@import '../../../assets/styles/mixin';
@keyframes dash {
  from {
    stroke-dashoffset: 3000;
  }
  to {
    stroke-dashoffset: 0;
  }
}

.background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height : 100%;
  overflow: hidden;
  z-index: -1;
  @include transition(background-color);
  svg {
    position: absolute;
    left: 0;
    bottom: 0;
    @include breakpoint(lg) {
      width: auto;
      height: 100%;
    }
    path {
      @include transition(stroke);
    }
  }
  &.dark-mode {
    background-color: $color-dark-background;
    path {
      stroke: $color-dark-main;
    }
  }
  &.landing-page {
    path {
      stroke-dasharray: 3000;
      stroke-dashoffset: 3000;
      animation: dash 4s linear alternate forwards;
    }
    path#first-line {
      animation: dash 3s linear alternate forwards;
    }
  }
}
main.landing-page {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 50%;
  &:hover {
    cursor: pointer;
  }
  .container {
    overflow: hidden;
    margin-top: 0;
  }
  }

  main {
    width: 100%;
    height: 100%;
    font-size: 1.5rem;
    .container {
      width: calc(100% - 15rem);
      height: 78vh;
      color: $color-light-main;
      margin: 8rem auto;
      font-size: 1.5rem;
      overflow-y: auto;
      @include customScroll($color-light-border);
      @include breakpoint(lg) {
        font-size: 1.2rem;
      }
      @include breakpoint(md) {
        width: calc(100% - 10rem);
        margin: 5rem auto;
      }
      @include breakpoint(sm) {
        font-size: 1rem;
        width: calc(100% - 7rem);
        margin:  4rem 5rem;
      }
      &.dark-mode {
        @include customScroll($color-dark-border);
      }
    }
  .sub-menu {
    position: absolute;
    top: 1rem;
    right: 1rem;
    display: flex;
    flex-flow: row;
    align-items: flex-start;
    font-size: 18px;
    font-weight: bold;
    .languages {
      appearance: none;
      &-label {
        color: $color-light-inactive;
        margin: 0 8px;
        padding-bottom: 10px;
        &:hover {
          cursor: pointer;
        }
        &.active {
          color: $color-light-main;
          border-bottom: 4px solid $color-light-main;
          padding-bottom: 6px;
        }
        @include breakpoint(md){
          font-size: 14px;
        }
        @include breakpoint(sm){
          display: none;
        }
      }
    }
    .toggle-section {
      display: flex;
      flex-flow: column;
      .switch {
        position: relative;
        display: inline-block;
        width: 48px;
        height: 24px;
        border: 3px solid $color-light-main;
        margin-left: 16px;
        @include rounded(1rem);
        @include breakpoint(xs) {
          width: 40px;
          height: 20px;
          border-width: 2px;
        }
        input {
          position: absolute;
          appearance: none;
        }
        .slider {
          position: absolute;
          top: 1px;
          left: 1px;
          width: 22px;
          height: 22px;
          background-color: $color-light-main;
          cursor: pointer;
          @include rounded(50%);
          @include transition(background-color);
          @include breakpoint(xs) {
            width: 18px;
            height: 18px;
          }
        }
        &-label {
          color: $color-light-main;
          font-size: 16px;
          font-weight: 400;
          text-align: center;
          margin: 0 0 0 16px;
        }
      }
    }
  }

  .menu {
    position: absolute;
    top: 50%;
    right: 16px;
    transform: translateY(-50%);
    text-align: center;
    margin: 0 auto;
    font-size: 20px;
    font-weight: bold;
    display: flex;
    flex-flow: row-reverse;
    align-items: center;
    ul {
      padding: 5px;
      margin: 0;
      margin-right: 8px;
      @include transition(all);
      @include breakpoint(sm){
        border-radius: 20px;
        background-color: $color-light-transparent-background;
        border: 1px solid $color-light-border;
      }
    }
    li {
      color: $color-light-inactive;
      padding: 8px;
      a {
        display: flex;
        justify-content: center;
        align-items: center;
        color: $color-light-inactive;
        text-decoration: none;
        padding-left: 16px;
        &.active {
          color: $color-light-main;
          border-left: 5px solid $color-light-main;
        }
      }
    }
    @include breakpoint(md){
      font-size: 16px;
    }
    @include breakpoint(sm) {
      right: 8px;
      ul {
        display: none;
      }
    }
  }

  .dark-mode {
    &.sub-menu {
      .languages-label {
        color: $color-dark-inactive;
        &.active {
          color: $color-dark-main;
          border-bottom: 4px solid $color-dark-main;
        }
      }
      .toggle-section > .switch {
        border: 3px solid $color-dark-main;
        background-color: $color-dark-main;
        .slider {
          left: 26px;
          background-color: $color-dark-background;
          @include  breakpoint(xs) {
            left: 23px;
          }
        }
        &-label {
          color: $color-dark-main;
        }
      }
    }
    &.menu {
      ul {
        @include breakpoint(sm){
          background-color: $color-dark-transparent-background;
          border-color: $color-dark-border;
        }
        li {
          color: $color-dark-inactive;
          a {
            color: $color-dark-inactive;
            &.active {
              color: $color-dark-main;
              border-left: 5px solid $color-dark-main;
            }
          };
        };
      }
    }
  }
}

.icn {
  &-lang, &-menu {
    display: none;
    @include breakpoint(sm){
      display: block;
    }

    &:hover {
      cursor: pointer;
    }
    &-close {
      display: none;
      &.dark-mode {
        path {
          fill: $color-dark-main;
        }
      }
    }

    &.dark-mode {
      path,
      g > rect {
        fill: $color-dark-main;
      }
    }
  }
}
